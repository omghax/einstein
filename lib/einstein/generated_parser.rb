#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/parser.y".
#

require 'racc/parser'


  require "einstein/nodes"


module Einstein

  class GeneratedParser < Racc::Parser

module_eval <<'..end lib/parser.y modeval..id81db39d2e7', 'lib/parser.y', 60
  include Einstein::Nodes
..end lib/parser.y modeval..id81db39d2e7

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 15, :_reduce_none,
 2, 15, :_reduce_2,
 1, 16, :_reduce_none,
 1, 17, :_reduce_none,
 3, 17, :_reduce_5,
 3, 17, :_reduce_6,
 1, 18, :_reduce_none,
 3, 18, :_reduce_8,
 3, 18, :_reduce_9,
 1, 19, :_reduce_none,
 3, 19, :_reduce_11,
 3, 19, :_reduce_12,
 3, 19, :_reduce_13,
 1, 20, :_reduce_none,
 2, 20, :_reduce_15,
 2, 20, :_reduce_16,
 2, 20, :_reduce_17,
 1, 21, :_reduce_18 ]

racc_reduce_n = 19

racc_shift_n = 32

racc_action_table = [
    13,    22,    20,    21,    15,    16,     4,    24,     7,     9,
    17,    18,     4,     1,     7,     9,    17,    18,     4,     1,
     7,     9,    17,    18,     4,     1,     7,     9,   nil,   nil,
     4,     1,     7,     9,   nil,   nil,     4,     1,     7,     9,
   nil,   nil,     4,     1,     7,     9,   nil,   nil,     4,     1,
     7,     9,   nil,   nil,     4,     1,     7,     9,   nil,   nil,
     4,     1,     7,     9,   nil,   nil,     4,     1,     7,     9,
   nil,   nil,     4,     1,     7,     9,    22,    20,    21,     1,
    22,    20,    21 ]

racc_action_check = [
     2,    28,    28,    28,     5,     5,     2,    13,     2,     2,
     6,     6,     7,     2,     7,     7,    26,    26,     0,     7,
     0,     0,    25,    25,    22,     0,    22,    22,   nil,   nil,
    21,    22,    21,    21,   nil,   nil,     1,    21,     1,     1,
   nil,   nil,    20,     1,    20,    20,   nil,   nil,     9,    20,
     9,     9,   nil,   nil,    18,     9,    18,    18,   nil,   nil,
    15,    18,    15,    15,   nil,   nil,    17,    15,    17,    17,
   nil,   nil,    16,    17,    16,    16,     8,     8,     8,    16,
    27,    27,    27 ]

racc_action_pointer = [
    12,    30,     0,   nil,   nil,     0,     2,     6,    66,    42,
   nil,   nil,   nil,     7,   nil,    54,    66,    60,    48,   nil,
    36,    24,    18,   nil,   nil,    14,     8,    70,    -9,   nil,
   nil,   nil ]

racc_action_default = [
   -19,   -19,   -19,    -1,   -18,    -3,    -4,   -19,    -7,   -19,
   -10,   -14,   -17,   -19,    -2,   -19,   -19,   -19,   -19,   -15,
   -19,   -19,   -19,   -16,    32,    -5,    -6,    -8,    -9,   -12,
   -13,   -11 ]

racc_goto_table = [
    12,     3,     2,    14,    27,    28,    19,   nil,    23,    25,
    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,
    30,    31 ]

racc_goto_check = [
     6,     2,     1,     2,     5,     5,     6,   nil,     6,     4,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,
     6,     6 ]

racc_goto_pointer = [
   nil,     2,     1,   nil,    -6,   -13,    -1,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     5,     6,     8,    10,    11 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :TRUE => 2,
 :FALSE => 3,
 :LSHIFT => 4,
 :RSHIFT => 5,
 :NUMBER => 6,
 :IDENT => 7,
 "+" => 8,
 "-" => 9,
 "*" => 10,
 "/" => 11,
 "%" => 12,
 "~" => 13 }

racc_use_result_var = true

racc_nt_base = 14

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'TRUE',
'FALSE',
'LSHIFT',
'RSHIFT',
'NUMBER',
'IDENT',
'"+"',
'"-"',
'"*"',
'"/"',
'"%"',
'"~"',
'$start',
'SourceElements',
'SourceElement',
'ShiftExpr',
'AdditiveExpr',
'MultiplicativeExpr',
'UnaryExpr',
'Literal']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'lib/parser.y', 18
  def _reduce_2( val, _values, result )
 result = val.flatten
   result
  end
.,.,

 # reduce 3 omitted

 # reduce 4 omitted

module_eval <<'.,.,', 'lib/parser.y', 27
  def _reduce_5( val, _values, result )
 result = LeftShiftNode.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 28
  def _reduce_6( val, _values, result )
 result = RightShiftNode.new(val[0], val[2])
   result
  end
.,.,

 # reduce 7 omitted

module_eval <<'.,.,', 'lib/parser.y', 33
  def _reduce_8( val, _values, result )
 result = AddNode.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 34
  def _reduce_9( val, _values, result )
 result = SubtractNode.new(val[0], val[2])
   result
  end
.,.,

 # reduce 10 omitted

module_eval <<'.,.,', 'lib/parser.y', 39
  def _reduce_11( val, _values, result )
 result = MultiplyNode.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 40
  def _reduce_12( val, _values, result )
 result = DivideNode.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 41
  def _reduce_13( val, _values, result )
 result = ModulusNode.new(val[0], val[2])
   result
  end
.,.,

 # reduce 14 omitted

module_eval <<'.,.,', 'lib/parser.y', 46
  def _reduce_15( val, _values, result )
 result = UnaryPlusNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 47
  def _reduce_16( val, _values, result )
 result = UnaryMinusNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 48
  def _reduce_17( val, _values, result )
 result = BitwiseNotNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 52
  def _reduce_18( val, _values, result )
 result = NumberNode.new(val.first)
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class GeneratedParser

end   # module Einstein
