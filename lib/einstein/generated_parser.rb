#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/parser.y".
#

require 'racc/parser'


  require "einstein/nodes"


module Einstein

  class GeneratedParser < Racc::Parser

module_eval <<'..end lib/parser.y modeval..ideb90abcc31', 'lib/parser.y', 80
  include Einstein::Nodes
..end lib/parser.y modeval..ideb90abcc31

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 18, :_reduce_none,
 2, 18, :_reduce_2,
 1, 19, :_reduce_none,
 1, 21, :_reduce_4,
 1, 22, :_reduce_none,
 1, 22, :_reduce_6,
 1, 23, :_reduce_none,
 2, 23, :_reduce_8,
 2, 23, :_reduce_9,
 2, 23, :_reduce_10,
 1, 24, :_reduce_none,
 3, 24, :_reduce_12,
 3, 24, :_reduce_13,
 3, 24, :_reduce_14,
 1, 25, :_reduce_none,
 3, 25, :_reduce_16,
 3, 25, :_reduce_17,
 1, 26, :_reduce_none,
 3, 26, :_reduce_19,
 3, 26, :_reduce_20,
 1, 27, :_reduce_none,
 3, 27, :_reduce_22,
 1, 28, :_reduce_none,
 3, 28, :_reduce_24,
 1, 20, :_reduce_none,
 3, 20, :_reduce_26 ]

racc_reduce_n = 27

racc_shift_n = 43

racc_action_table = [
    26,     8,     9,    11,    13,    15,     8,     9,    11,    13,
    15,     8,     9,    11,    13,    15,     8,     9,    11,    13,
    15,     8,     9,    11,    13,    15,     8,     9,    11,    13,
    15,     8,     9,    11,    13,    15,     8,     9,    11,    13,
    15,     8,     9,    11,    13,    15,     8,     9,    11,    13,
    15,     8,     9,    11,    13,    15,     8,     9,    11,    13,
    15,     8,     9,    11,    13,    15,     8,     9,    11,    13,
    15,     8,     9,    11,    13,    15,    17,    18,    19,    17,
    18,    19,    17,    18,    19,    22,    23,    20,    21,    20,
    21,    22,    23,    20,    21,    30,    41,    24,    25,    24,
    25 ]

racc_action_check = [
    10,    11,    11,    11,    11,    11,    10,    10,    10,    10,
    10,    25,    25,    25,    25,    25,    24,    24,    24,    24,
    24,    23,    23,    23,    23,    23,    22,    22,    22,    22,
    22,     0,     0,     0,     0,     0,    30,    30,    30,    30,
    30,    13,    13,    13,    13,    13,    21,    21,    21,    21,
    21,    15,    15,    15,    15,    15,    17,    17,    17,    17,
    17,    18,    18,    18,    18,    18,    19,    19,    19,    19,
    19,    20,    20,    20,    20,    20,    35,    35,    35,     3,
     3,     3,    36,    36,    36,     5,     5,    38,    38,    37,
    37,    39,    39,     4,     4,    14,    26,     6,     7,    40,
    42 ]

racc_action_pointer = [
    25,   nil,   nil,    68,    85,    81,    83,    83,   nil,   nil,
     0,    -5,   nil,    35,    79,    45,   nil,    50,    55,    60,
    65,    40,    20,    15,    10,     5,    96,   nil,   nil,   nil,
    30,   nil,   nil,   nil,   nil,    65,    71,    81,    79,    87,
    85,   nil,    85 ]

racc_action_default = [
   -27,    -7,   -11,   -15,   -18,   -21,   -23,   -25,    -4,    -6,
   -27,   -27,    -1,   -27,    -3,   -27,    -5,   -27,   -27,   -27,
   -27,   -27,   -27,   -27,   -27,   -27,   -27,    -2,    -8,    -9,
   -27,   -10,   -12,   -13,   -14,   -16,   -17,   -19,   -20,   -22,
   -24,    43,   -26 ]

racc_goto_table = [
    12,    28,    10,    29,    39,    31,    40,    32,    33,    34,
    27,    37,    38,    35,    36,    42 ]

racc_goto_check = [
     2,     6,     1,     6,     9,     6,    10,     6,     6,     6,
     2,     8,     8,     7,     7,    11 ]

racc_goto_pointer = [
   nil,     2,     0,   nil,   nil,   nil,   -10,    -7,   -11,   -20,
   -19,   -15 ]

racc_goto_default = [
   nil,   nil,   nil,    14,    16,     1,     2,     3,     4,     5,
     6,     7 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :TRUE => 2,
 :FALSE => 3,
 :LSHIFT => 4,
 :RSHIFT => 5,
 :NUMBER => 6,
 :IDENT => 7,
 "+" => 8,
 "-" => 9,
 "~" => 10,
 "*" => 11,
 "/" => 12,
 "%" => 13,
 "&" => 14,
 "^" => 15,
 "|" => 16 }

racc_use_result_var = true

racc_nt_base = 17

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'TRUE',
'FALSE',
'LSHIFT',
'RSHIFT',
'NUMBER',
'IDENT',
'"+"',
'"-"',
'"~"',
'"*"',
'"/"',
'"%"',
'"&"',
'"^"',
'"|"',
'$start',
'SourceElements',
'SourceElement',
'BitwiseOrExpr',
'Literal',
'PrimaryExpr',
'UnaryExpr',
'MultiplicativeExpr',
'AdditiveExpr',
'ShiftExpr',
'BitwiseAndExpr',
'BitwiseXorExpr']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'lib/parser.y', 18
  def _reduce_2( val, _values, result )
 result = val.flatten
   result
  end
.,.,

 # reduce 3 omitted

module_eval <<'.,.,', 'lib/parser.y', 26
  def _reduce_4( val, _values, result )
 result = NumberNode.new(val.first)
   result
  end
.,.,

 # reduce 5 omitted

module_eval <<'.,.,', 'lib/parser.y', 31
  def _reduce_6( val, _values, result )
 result = ResolveNode.new(val.first)
   result
  end
.,.,

 # reduce 7 omitted

module_eval <<'.,.,', 'lib/parser.y', 36
  def _reduce_8( val, _values, result )
 result = UnaryPlusNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 37
  def _reduce_9( val, _values, result )
 result = UnaryMinusNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 38
  def _reduce_10( val, _values, result )
 result = BitwiseNotNode.new(val[1])
   result
  end
.,.,

 # reduce 11 omitted

module_eval <<'.,.,', 'lib/parser.y', 43
  def _reduce_12( val, _values, result )
 result = MultiplyNode.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 44
  def _reduce_13( val, _values, result )
 result = DivideNode.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 45
  def _reduce_14( val, _values, result )
 result = ModulusNode.new(val[0], val[2])
   result
  end
.,.,

 # reduce 15 omitted

module_eval <<'.,.,', 'lib/parser.y', 50
  def _reduce_16( val, _values, result )
 result = AddNode.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 51
  def _reduce_17( val, _values, result )
 result = SubtractNode.new(val[0], val[2])
   result
  end
.,.,

 # reduce 18 omitted

module_eval <<'.,.,', 'lib/parser.y', 56
  def _reduce_19( val, _values, result )
 result = LeftShiftNode.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 57
  def _reduce_20( val, _values, result )
 result = RightShiftNode.new(val[0], val[2])
   result
  end
.,.,

 # reduce 21 omitted

module_eval <<'.,.,', 'lib/parser.y', 62
  def _reduce_22( val, _values, result )
 result = BitwiseAndNode.new(val[0], val[2])
   result
  end
.,.,

 # reduce 23 omitted

module_eval <<'.,.,', 'lib/parser.y', 67
  def _reduce_24( val, _values, result )
 result = BitwiseXorNode.new(val[0], val[2])
   result
  end
.,.,

 # reduce 25 omitted

module_eval <<'.,.,', 'lib/parser.y', 72
  def _reduce_26( val, _values, result )
 result = BitwiseOrNode.new(val[0], val[2])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class GeneratedParser

end   # module Einstein
