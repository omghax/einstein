== Version 0.1.1

First version to include benchmarking. Each type of node in the AST had its
own Einstein::Node subclass.

  Benchmarking 10000 run(s) of Einstein.parse
                               user     system      total        real
  1                        1.020000   0.020000   1.040000 (  1.053689)
  2 + 5                    3.150000   0.010000   3.160000 (  3.182302)
  x * y                    2.690000   0.010000   2.700000 (  2.712514)
  (x ** 2) / 8 - (y << z) 10.770000   0.040000  10.810000 ( 10.866615)
  Benchmarking 10000 run(s) of Einstein.evaluate
                               user     system      total        real
  1                        1.710000   0.000000   1.710000 (  1.719042)
  2 + 5                    4.110000   0.020000   4.130000 (  4.148186)
  x * y                    3.920000   0.010000   3.930000 (  3.949004)
  (x ** 2) / 8 - (y << z) 13.440000   0.040000  13.480000 ( 13.548173)
  Benchmarking 10000 run(s) of evaluate on a pre-parsed expression
                               user     system      total        real
  1                        0.530000   0.000000   0.530000 (  0.538565)
  2 + 5                    1.000000   0.000000   1.000000 (  1.003800)
  x * y                    1.080000   0.010000   1.090000 (  1.090432)
  (x ** 2) / 8 - (y << z)  2.490000   0.010000   2.500000 (  2.518389)

== Version 0.2.0

All node classes were removed, and Einstein was re-implemented using only
s-expressions. The custom Einstein::Tokenizer class was removed as well, and
replaced with one generated by rex.

  Benchmarking 10000 run(s) of Einstein.parse
                               user     system      total        real
  1                        0.600000   0.030000   0.630000 (  0.629743)
  2 + 5                    1.300000   0.000000   1.300000 (  1.310801)
  x * y                    1.280000   0.010000   1.290000 (  1.298743)
  (x ** 2) / 8 - (y << z)  4.570000   0.020000   4.590000 (  4.611955)
  Benchmarking 10000 run(s) of Einstein.evaluate
                               user     system      total        real
  1                        0.780000   0.000000   0.780000 (  0.794553)
  2 + 5                    1.580000   0.010000   1.590000 (  1.595382)
  x * y                    1.600000   0.000000   1.600000 (  1.613572)
  (x ** 2) / 8 - (y << z)  5.380000   0.020000   5.400000 (  5.436614)
  Benchmarking 10000 run(s) of evaluate on a pre-parsed expression
                               user     system      total        real
  1                        0.080000   0.000000   0.080000 (  0.077623)
  2 + 5                    0.230000   0.000000   0.230000 (  0.232722)
  x * y                    0.320000   0.000000   0.320000 (  0.326163)
  (x ** 2) / 8 - (y << z)  0.670000   0.000000   0.670000 (  0.682789)
